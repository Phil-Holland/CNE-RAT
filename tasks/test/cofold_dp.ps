%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.11
%%CreationDate: Thu Mar  7 20:42:38 2019
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% doof
%%BeginProlog
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def
end
%EndProlog

DPdict begin

/DPtitle {
  (cofold)
} def

/sequence { (\
ACUUUUUUGAGUUAGUUUAAACACACCCGCA&CAAUCUAUUGUAACAAAGAA\
) } def

/len { sequence length } bind def

/cutpoint 32 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 8 0.003400396 ubox
1 12 0.169670769 ubox
1 13 0.011974927 ubox
1 16 0.018544286 ubox
1 40 0.003182479 ubox
1 42 0.032873219 ubox
2 9 0.032368102 ubox
2 11 0.197252622 ubox
2 15 0.021506038 ubox
2 41 0.034735118 ubox
2 49 0.424681600 ubox
3 9 0.006562791 ubox
3 10 0.197525269 ubox
3 11 0.006656573 ubox
3 14 0.021197911 ubox
3 21 0.003172534 ubox
3 34 0.005853879 ubox
3 38 0.006658556 ubox
3 43 0.003428379 ubox
3 44 0.006152279 ubox
3 46 0.004361061 ubox
3 47 0.012436952 ubox
3 48 0.426625875 ubox
3 49 0.043622774 ubox
3 50 0.109872390 ubox
3 51 0.527396616 ubox
4 9 0.192546484 ubox
4 10 0.010889730 ubox
4 11 0.003938086 ubox
4 15 0.003190774 ubox
4 20 0.003832503 ubox
4 21 0.004106242 ubox
4 23 0.008673007 ubox
4 33 0.005924369 ubox
4 34 0.005966998 ubox
4 38 0.004109877 ubox
4 43 0.006721823 ubox
4 44 0.006518589 ubox
4 46 0.013256636 ubox
4 47 0.424610822 ubox
4 48 0.051583017 ubox
4 49 0.113085656 ubox
4 50 0.745166102 ubox
4 51 0.156749535 ubox
5 9 0.010675110 ubox
5 10 0.005085548 ubox
5 11 0.003823762 ubox
5 14 0.005051037 ubox
5 19 0.003725036 ubox
5 20 0.004946529 ubox
5 21 0.007878723 ubox
5 23 0.004474477 ubox
5 33 0.006008399 ubox
5 34 0.005571613 ubox
5 38 0.014385543 ubox
5 41 0.003568459 ubox
5 43 0.007269146 ubox
5 44 0.012321733 ubox
5 46 0.393918761 ubox
5 47 0.053447053 ubox
5 48 0.111367001 ubox
5 49 0.767135182 ubox
5 50 0.212141785 ubox
5 51 0.161542574 ubox
6 10 0.004082665 ubox
6 11 0.004477787 ubox
6 14 0.003685268 ubox
6 15 0.004462967 ubox
6 19 0.004828108 ubox
6 20 0.009755482 ubox
6 21 0.068801760 ubox
6 33 0.005465767 ubox
6 34 0.006207464 ubox
6 38 0.003728274 ubox
6 41 0.005008222 ubox
6 43 0.015057008 ubox
6 44 0.051216209 ubox
6 46 0.051727065 ubox
6 47 0.106981040 ubox
6 48 0.774938187 ubox
6 49 0.217023439 ubox
6 50 0.219569409 ubox
6 51 0.035825733 ubox
7 14 0.006478533 ubox
7 15 0.004039234 ubox
7 19 0.009259155 ubox
7 20 0.084644476 ubox
7 21 0.004628105 ubox
7 33 0.005908001 ubox
7 34 0.048925574 ubox
7 38 0.006139632 ubox
7 41 0.003651943 ubox
7 43 0.050322367 ubox
7 44 0.380167190 ubox
7 46 0.096108822 ubox
7 47 0.777804789 ubox
7 48 0.217178001 ubox
7 49 0.225436165 ubox
7 50 0.048342560 ubox
7 51 0.008486551 ubox
8 14 0.005976532 ubox
8 15 0.003169273 ubox
8 19 0.088486511 ubox
8 20 0.005169292 ubox
8 23 0.007541804 ubox
8 25 0.057746322 ubox
8 29 0.020848379 ubox
8 31 0.010799630 ubox
8 33 0.055536599 ubox
8 34 0.003523125 ubox
8 38 0.008947352 ubox
8 41 0.017722393 ubox
8 43 0.391866789 ubox
8 44 0.023084103 ubox
8 46 0.774606149 ubox
8 47 0.214615024 ubox
8 48 0.225679618 ubox
8 49 0.048966446 ubox
8 50 0.011063791 ubox
8 51 0.004571482 ubox
9 13 0.005240574 ubox
9 17 0.011564514 ubox
9 18 0.089183339 ubox
9 22 0.008897301 ubox
9 24 0.068606672 ubox
9 26 0.008188557 ubox
9 27 0.013217979 ubox
9 28 0.034031966 ubox
9 30 0.015344907 ubox
9 32 0.056352571 ubox
9 36 0.030330877 ubox
9 37 0.008153532 ubox
9 39 0.003625051 ubox
9 40 0.022704861 ubox
9 42 0.374254579 ubox
9 45 0.760442202 ubox
10 16 0.017725070 ubox
10 17 0.088031579 ubox
10 18 0.027781872 ubox
10 35 0.028676045 ubox
10 37 0.039839813 ubox
10 39 0.025025774 ubox
10 40 0.153512591 ubox
10 42 0.050751005 ubox
11 16 0.062618936 ubox
11 17 0.029005891 ubox
11 18 0.019089919 ubox
11 22 0.364431836 ubox
11 24 0.071594524 ubox
11 26 0.106728309 ubox
11 27 0.019334489 ubox
11 28 0.030786662 ubox
11 30 0.181154246 ubox
11 32 0.006547505 ubox
11 35 0.016055097 ubox
11 36 0.039787517 ubox
11 39 0.153775063 ubox
11 40 0.182921803 ubox
11 42 0.051513396 ubox
11 45 0.394634460 ubox
12 19 0.016039286 ubox
12 20 0.040548903 ubox
12 21 0.363637380 ubox
12 23 0.067111360 ubox
12 25 0.104594306 ubox
12 29 0.179593829 ubox
12 33 0.004889657 ubox
12 34 0.022961554 ubox
12 38 0.127921512 ubox
12 41 0.031067221 ubox
12 43 0.037144370 ubox
12 44 0.413745309 ubox
12 46 0.003872554 ubox
12 47 0.020755756 ubox
12 48 0.030800225 ubox
12 49 0.007049621 ubox
12 50 0.011641775 ubox
12 51 0.006611118 ubox
13 19 0.050606293 ubox
13 20 0.343297509 ubox
13 21 0.012316675 ubox
13 23 0.018813040 ubox
13 25 0.018013344 ubox
13 29 0.006627521 ubox
13 31 0.003451971 ubox
13 33 0.022061854 ubox
13 34 0.016117486 ubox
13 38 0.445608275 ubox
13 41 0.377165917 ubox
13 43 0.416140166 ubox
13 44 0.014732879 ubox
13 46 0.026582573 ubox
13 47 0.037855856 ubox
13 48 0.009285221 ubox
13 49 0.013350053 ubox
13 50 0.010916052 ubox
13 51 0.006304962 ubox
14 18 0.049574108 ubox
14 35 0.007338035 ubox
14 37 0.459625527 ubox
14 39 0.021097187 ubox
14 40 0.383645902 ubox
14 42 0.396624705 ubox
15 22 0.185793943 ubox
15 24 0.166055916 ubox
15 26 0.195953509 ubox
15 27 0.018072689 ubox
15 28 0.019377871 ubox
15 30 0.065702028 ubox
15 32 0.016911725 ubox
15 35 0.088518223 ubox
15 36 0.456373916 ubox
15 37 0.011223687 ubox
15 39 0.372460749 ubox
15 40 0.033480043 ubox
15 42 0.011676487 ubox
15 45 0.154256882 ubox
16 20 0.010444050 ubox
16 21 0.172182750 ubox
16 23 0.157121629 ubox
16 25 0.193552941 ubox
16 29 0.063715887 ubox
16 33 0.015790724 ubox
16 34 0.154351913 ubox
16 38 0.353621578 ubox
16 41 0.034509382 ubox
16 43 0.007526389 ubox
16 44 0.154006806 ubox
16 46 0.004348159 ubox
16 47 0.013017440 ubox
16 48 0.022071453 ubox
16 49 0.017651501 ubox
16 50 0.018377811 ubox
16 51 0.011553190 ubox
17 21 0.013816127 ubox
17 23 0.019217510 ubox
17 25 0.011559055 ubox
17 29 0.005310944 ubox
17 33 0.141000485 ubox
17 34 0.279078859 ubox
17 38 0.031473978 ubox
17 41 0.012520018 ubox
17 43 0.147113587 ubox
17 44 0.034426383 ubox
17 46 0.013568242 ubox
17 47 0.024786335 ubox
17 48 0.021376476 ubox
17 49 0.019611895 ubox
17 50 0.015554217 ubox
17 51 0.004813781 ubox
18 23 0.046563142 ubox
18 25 0.019525028 ubox
18 29 0.005731564 ubox
18 31 0.003832996 ubox
18 33 0.275249418 ubox
18 34 0.053880171 ubox
18 38 0.229658667 ubox
18 41 0.076250851 ubox
18 43 0.038007351 ubox
18 44 0.007997095 ubox
18 46 0.023478327 ubox
18 47 0.020682231 ubox
18 48 0.018003647 ubox
18 49 0.015343071 ubox
18 50 0.006102362 ubox
19 35 0.116566806 ubox
19 37 0.224547602 ubox
19 39 0.025693973 ubox
19 40 0.077560525 ubox
19 42 0.034190444 ubox
20 35 0.035216576 ubox
20 37 0.029223170 ubox
20 39 0.068287052 ubox
20 40 0.077564704 ubox
20 42 0.009668504 ubox
21 35 0.042952860 ubox
21 37 0.016502496 ubox
21 39 0.065599367 ubox
21 40 0.011283952 ubox
21 42 0.134893488 ubox
22 29 0.086368836 ubox
22 41 0.141430910 ubox
22 49 0.016157725 ubox
23 35 0.013096025 ubox
23 37 0.018220611 ubox
23 39 0.007173654 ubox
23 40 0.125431872 ubox
23 42 0.141818761 ubox
24 29 0.081015658 ubox
24 41 0.149650735 ubox
24 49 0.014724111 ubox
25 35 0.008937343 ubox
25 37 0.009769538 ubox
25 39 0.012997174 ubox
25 40 0.132830198 ubox
25 42 0.037218670 ubox
26 41 0.039163058 ubox
26 49 0.010382330 ubox
27 41 0.012627085 ubox
27 49 0.014465754 ubox
28 41 0.031364412 ubox
28 49 0.020076198 ubox
29 32 0.017644035 ubox
29 35 0.007177763 ubox
29 36 0.024736300 ubox
29 37 0.007927218 ubox
29 39 0.006687716 ubox
29 40 0.023527218 ubox
29 42 0.138160266 ubox
29 45 0.016075225 ubox
30 41 0.143032213 ubox
30 49 0.018362528 ubox
31 35 0.006509184 ubox
31 37 0.003842869 ubox
31 39 0.006966213 ubox
31 40 0.112445387 ubox
32 41 0.184470114 ubox
33 37 0.008661673 ubox
33 39 0.010359883 ubox
33 40 0.181351750 ubox
33 42 0.011558552 ubox
34 39 0.143133707 ubox
34 40 0.029537665 ubox
34 42 0.031064540 ubox
35 41 0.027688890 ubox
35 43 0.014850118 ubox
35 44 0.008874029 ubox
35 50 0.035009206 ubox
36 41 0.071228093 ubox
36 49 0.037882411 ubox
37 41 0.007200786 ubox
37 43 0.023314655 ubox
37 44 0.012643130 ubox
37 48 0.037142400 ubox
38 42 0.021615837 ubox
39 43 0.006286277 ubox
39 44 0.008068208 ubox
39 46 0.007149731 ubox
39 47 0.037054456 ubox
39 48 0.011568906 ubox
39 49 0.003299300 ubox
39 50 0.007849202 ubox
39 51 0.005053125 ubox
40 44 0.005809218 ubox
40 46 0.040121607 ubox
40 47 0.014055030 ubox
40 48 0.005087815 ubox
40 49 0.008444137 ubox
40 50 0.006562824 ubox
41 45 0.040251964 ubox
42 48 0.005793190 ubox
45 49 0.006091706 ubox
4 50 0.9746794 lbox
5 49 0.9746794 lbox
6 48 0.9746794 lbox
7 47 0.9746794 lbox
8 46 0.9746794 lbox
9 45 0.9746794 lbox
showpage
end
%%EOF
